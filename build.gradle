plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'com.fredriksonsound'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

repositories {
	mavenCentral()
}


dependencies {
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.2'
	compile group: 'de.rtner', name: 'PBKDF2', version: '1.1.0'
	compile group: 'mysql', name: 'mysql-connector-java'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: '2.2.6.RELEASE'
	compile group: 'org.springframework.data', name: 'spring-data-jpa', version: '2.2.6.RELEASE'
	compile group: 'org.hibernate', name: 'hibernate-core', version: '5.4.14.Final'
	compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
	compile group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	implementation 'junit:junit:4.12'
	implementation 'junit:junit:4.12'
	implementation 'junit:junit:4.12'
	implementation 'junit:junit:4.12'
	implementation 'junit:junit:4.12'
	testImplementation('junit:junit:4.13')
	testCompile group: 'com.h2database', name: 'h2', version: '1.3.148'
}

test {
	jacoco {
		destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
		classDumpDir = file("$buildDir/jacoco/classpathdumps")
	}
	useJUnitPlatform()
}

test.finalizedBy(jacocoTestReport)

jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
	}

	afterEvaluate {
		classDirectories.setFrom(
			files(classDirectories.files.collect {
				fileTree(dir: it,
					exclude: ['**/*Environment*.*',
							'**/*AppConfig*.*',
							 '**/*IotBackofficeAuthApplication*.*',
					])
			})
		)
	}
}